/**
 * WhatsAPI Go
 * The V2 of WhatsAPI Go
 *
 * The version of the OpenAPI document: 2.0
 * Contact: manjit@sponsorbook.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import StructsFileUpload from './StructsFileUpload';

/**
 * The StructsSendMediaPayload model module.
 * @module model/StructsSendMediaPayload
 * @version 2.0
 */
class StructsSendMediaPayload {
    /**
     * Constructs a new <code>StructsSendMediaPayload</code>.
     * @alias module:model/StructsSendMediaPayload
     * @param mediaData {module:model/StructsFileUpload} 
     * @param mediaType {String} 
     * @param to {String} 
     */
    constructor(mediaData, mediaType, to) { 
        
        StructsSendMediaPayload.initialize(this, mediaData, mediaType, to);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, mediaData, mediaType, to) { 
        obj['media_data'] = mediaData;
        obj['media_type'] = mediaType;
        obj['to'] = to;
    }

    /**
     * Constructs a <code>StructsSendMediaPayload</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/StructsSendMediaPayload} obj Optional instance to populate.
     * @return {module:model/StructsSendMediaPayload} The populated <code>StructsSendMediaPayload</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new StructsSendMediaPayload();

            if (data.hasOwnProperty('caption')) {
                obj['caption'] = ApiClient.convertToType(data['caption'], 'String');
            }
            if (data.hasOwnProperty('filename')) {
                obj['filename'] = ApiClient.convertToType(data['filename'], 'String');
            }
            if (data.hasOwnProperty('media_data')) {
                obj['media_data'] = StructsFileUpload.constructFromObject(data['media_data']);
            }
            if (data.hasOwnProperty('media_type')) {
                obj['media_type'] = ApiClient.convertToType(data['media_type'], 'String');
            }
            if (data.hasOwnProperty('to')) {
                obj['to'] = ApiClient.convertToType(data['to'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>StructsSendMediaPayload</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>StructsSendMediaPayload</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of StructsSendMediaPayload.RequiredProperties) {
            if (!data[property]) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['caption'] && !(typeof data['caption'] === 'string' || data['caption'] instanceof String)) {
            throw new Error("Expected the field `caption` to be a primitive type in the JSON string but got " + data['caption']);
        }
        // ensure the json data is a string
        if (data['filename'] && !(typeof data['filename'] === 'string' || data['filename'] instanceof String)) {
            throw new Error("Expected the field `filename` to be a primitive type in the JSON string but got " + data['filename']);
        }
        // validate the optional field `media_data`
        if (data['media_data']) { // data not null
          StructsFileUpload.validateJSON(data['media_data']);
        }
        // ensure the json data is a string
        if (data['media_type'] && !(typeof data['media_type'] === 'string' || data['media_type'] instanceof String)) {
            throw new Error("Expected the field `media_type` to be a primitive type in the JSON string but got " + data['media_type']);
        }
        // ensure the json data is a string
        if (data['to'] && !(typeof data['to'] === 'string' || data['to'] instanceof String)) {
            throw new Error("Expected the field `to` to be a primitive type in the JSON string but got " + data['to']);
        }

        return true;
    }


}

StructsSendMediaPayload.RequiredProperties = ["media_data", "media_type", "to"];

/**
 * @member {String} caption
 */
StructsSendMediaPayload.prototype['caption'] = undefined;

/**
 * @member {String} filename
 */
StructsSendMediaPayload.prototype['filename'] = undefined;

/**
 * @member {module:model/StructsFileUpload} media_data
 */
StructsSendMediaPayload.prototype['media_data'] = undefined;

/**
 * @member {String} media_type
 */
StructsSendMediaPayload.prototype['media_type'] = undefined;

/**
 * @member {String} to
 */
StructsSendMediaPayload.prototype['to'] = undefined;






export default StructsSendMediaPayload;

