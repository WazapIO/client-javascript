/**
 * WhatsAPI Go
 * The V2 of WhatsAPI Go
 *
 * The version of the OpenAPI document: 2.0
 * Contact: manjit@sponsorbook.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import APIResponse from '../models/APIResponse';
import WebhookPayload from '../models/WebhookPayload';

/**
* Instance service.
* @module WhatsAPI/whatsapi/InstanceApi
* @version 1.0.0
*/
export default class InstanceApi {

    /**
    * Constructs a new InstanceApi. 
    * @alias module:WhatsAPI/whatsapi/InstanceApi
    * @class
    * @param {module:WhatsAPI/ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:WhatsAPI/ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the changeWebhookUrl operation.
     * @callback module:WhatsAPI/whatsapi/InstanceApi~changeWebhookUrlCallback
     * @param {String} error Error message, if any.
     * @param {module:WhatsAPI/models/APIResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Change Webhook url.
     * Changes the webhook url of an instance.
     * @param {String} instanceKey Instance key
     * @param {module:WhatsAPI/models/WebhookPayload} data Message data
     * @param {module:WhatsAPI/whatsapi/InstanceApi~changeWebhookUrlCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:WhatsAPI/models/APIResponse}
     */
    changeWebhookUrl(instanceKey, data, callback) {
      let postBody = data;
      // verify the required parameter 'instanceKey' is set
      if (instanceKey === undefined || instanceKey === null) {
        throw new Error("Missing the required parameter 'instanceKey' when calling changeWebhookUrl");
      }
      // verify the required parameter 'data' is set
      if (data === undefined || data === null) {
        throw new Error("Missing the required parameter 'data' when calling changeWebhookUrl");
      }

      let pathParams = {
        'instance_key': instanceKey
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['ApiKeyAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['*/*'];
      let returnType = APIResponse;
      return this.apiClient.callApi(
        '/instances/{instance_key}/webhook', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the createInstance operation.
     * @callback module:WhatsAPI/whatsapi/InstanceApi~createInstanceCallback
     * @param {String} error Error message, if any.
     * @param {module:WhatsAPI/models/APIResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a new instance key.
     * This endpoint is used to create a new WhatsApp Web instance.
     * @param {Object} opts Optional parameters
     * @param {String} opts.instanceKey Insert instance key if you want to provide custom key
     * @param {module:WhatsAPI/whatsapi/InstanceApi~createInstanceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:WhatsAPI/models/APIResponse}
     */
    createInstance(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'instance_key': opts['instanceKey']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['ApiKeyAuth'];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = APIResponse;
      return this.apiClient.callApi(
        '/instances/create', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteInstance operation.
     * @callback module:WhatsAPI/whatsapi/InstanceApi~deleteInstanceCallback
     * @param {String} error Error message, if any.
     * @param {module:WhatsAPI/models/APIResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete Instance.
     * Deletes the instance with the provided key.
     * @param {String} instanceKey Instance key
     * @param {module:WhatsAPI/whatsapi/InstanceApi~deleteInstanceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:WhatsAPI/models/APIResponse}
     */
    deleteInstance(instanceKey, callback) {
      let postBody = null;
      // verify the required parameter 'instanceKey' is set
      if (instanceKey === undefined || instanceKey === null) {
        throw new Error("Missing the required parameter 'instanceKey' when calling deleteInstance");
      }

      let pathParams = {
        'instance_key': instanceKey
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['ApiKeyAuth'];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = APIResponse;
      return this.apiClient.callApi(
        '/instances/{instance_key}/delete', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getContacts operation.
     * @callback module:WhatsAPI/whatsapi/InstanceApi~getContactsCallback
     * @param {String} error Error message, if any.
     * @param {module:WhatsAPI/models/APIResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get contacts.
     * Fetches the list of contacts in the instance.
     * @param {String} instanceKey Instance key
     * @param {module:WhatsAPI/whatsapi/InstanceApi~getContactsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:WhatsAPI/models/APIResponse}
     */
    getContacts(instanceKey, callback) {
      let postBody = null;
      // verify the required parameter 'instanceKey' is set
      if (instanceKey === undefined || instanceKey === null) {
        throw new Error("Missing the required parameter 'instanceKey' when calling getContacts");
      }

      let pathParams = {
        'instance_key': instanceKey
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['ApiKeyAuth'];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = APIResponse;
      return this.apiClient.callApi(
        '/instances/{instance_key}/contacts', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getInstance operation.
     * @callback module:WhatsAPI/whatsapi/InstanceApi~getInstanceCallback
     * @param {String} error Error message, if any.
     * @param {module:WhatsAPI/models/APIResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Instance.
     * Returns the instance data of single instance with connection status.
     * @param {String} instanceKey Instance key
     * @param {module:WhatsAPI/whatsapi/InstanceApi~getInstanceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:WhatsAPI/models/APIResponse}
     */
    getInstance(instanceKey, callback) {
      let postBody = null;
      // verify the required parameter 'instanceKey' is set
      if (instanceKey === undefined || instanceKey === null) {
        throw new Error("Missing the required parameter 'instanceKey' when calling getInstance");
      }

      let pathParams = {
        'instance_key': instanceKey
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['ApiKeyAuth'];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = APIResponse;
      return this.apiClient.callApi(
        '/instances/{instance_key}/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getQrCode operation.
     * @callback module:WhatsAPI/whatsapi/InstanceApi~getQrCodeCallback
     * @param {String} error Error message, if any.
     * @param {module:WhatsAPI/models/APIResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get QrCode.
     * Returns the qrcode in the base64 format.
     * @param {String} instanceKey Instance key
     * @param {module:WhatsAPI/whatsapi/InstanceApi~getQrCodeCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:WhatsAPI/models/APIResponse}
     */
    getQrCode(instanceKey, callback) {
      let postBody = null;
      // verify the required parameter 'instanceKey' is set
      if (instanceKey === undefined || instanceKey === null) {
        throw new Error("Missing the required parameter 'instanceKey' when calling getQrCode");
      }

      let pathParams = {
        'instance_key': instanceKey
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['ApiKeyAuth'];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = APIResponse;
      return this.apiClient.callApi(
        '/instances/{instance_key}/qrcode', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listInstances operation.
     * @callback module:WhatsAPI/whatsapi/InstanceApi~listInstancesCallback
     * @param {String} error Error message, if any.
     * @param {module:WhatsAPI/models/APIResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get all instances.
     * Fetches the list of all Instances with login status.
     * @param {module:WhatsAPI/whatsapi/InstanceApi~listInstancesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:WhatsAPI/models/APIResponse}
     */
    listInstances(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['ApiKeyAuth'];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = APIResponse;
      return this.apiClient.callApi(
        '/instances/list', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the logoutInstance operation.
     * @callback module:WhatsAPI/whatsapi/InstanceApi~logoutInstanceCallback
     * @param {String} error Error message, if any.
     * @param {module:WhatsAPI/models/APIResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Logout Instance.
     * Logouts of the instance with the provided key.
     * @param {String} instanceKey Instance key
     * @param {module:WhatsAPI/whatsapi/InstanceApi~logoutInstanceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:WhatsAPI/models/APIResponse}
     */
    logoutInstance(instanceKey, callback) {
      let postBody = null;
      // verify the required parameter 'instanceKey' is set
      if (instanceKey === undefined || instanceKey === null) {
        throw new Error("Missing the required parameter 'instanceKey' when calling logoutInstance");
      }

      let pathParams = {
        'instance_key': instanceKey
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['ApiKeyAuth'];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = APIResponse;
      return this.apiClient.callApi(
        '/instances/{instance_key}/logout', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
